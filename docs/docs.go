// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/GetCountry/{name}": {
            "get": {
                "description": "Retrieve country based on person's name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persons"
                ],
                "summary": "Get country by person name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/GetCurrentTime": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve current time based on the provided timezone",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "time"
                ],
                "summary": "Get current time by timezone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Timezone",
                        "name": "timezone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.TimeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.ResponseWithoutData"
                        }
                    }
                }
            }
        },
        "/users/test": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves details of the logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.TimeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.TimeResponse": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "dateTime": {
                    "type": "string"
                },
                "day": {
                    "type": "integer"
                },
                "dayOfWeek": {
                    "type": "string"
                },
                "dstActive": {
                    "type": "boolean"
                },
                "hour": {
                    "type": "integer"
                },
                "milliSeconds": {
                    "type": "integer"
                },
                "minute": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "seconds": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "util.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data is omitted if empty"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "util.ResponseWithoutData": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "API",
	Description:      "API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
